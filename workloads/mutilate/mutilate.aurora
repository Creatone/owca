# Copyright (c) 2018 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


import os

include('../common.aurora')

#----------------------------------------------------------------------------------------------------
###
# Params which can be modified by exporting environment variables.
###

communication_port = os.environ.get('communication_port', '11211')
#----------------------------------------------------------------------------------------------------


QPS=350000
mutilate_cmd='"while true; do /mutilate/mutilate -s %s:%s -Q %d --time=90 --update=0.01 --threads=8 -C 24; done"'%(
    application_host_ip, communication_port, QPS
)

jobs = [
  WorkloadService(
    task=SequentialTask(
      name=job_name,
      resources=Resources(cpu=cpu, ram=ram, disk=disk),
      processes=[
        Process(
          name='mutilate_warmup',
        cmdline='/mutilate/mutilate -s %s:%s --time=30 -R 40000 --update=1 --threads=4 -C 4' % (
            application_host_ip, communication_port),
        ),
        Process(
          name='mutilate_run',
          cmdline="/usr/bin/mutilate_wrapper.pex --command '{mutilate_cmd}' "
              "--metric_name_prefix {metric_name_prefix} "
              "--stderr 0 --kafka_brokers '{kafka_brokers}' --kafka_topic {kafka_topic} "
              "--log_level {log_level} "
              "--slo {slo} --sli_metric_name {application}_read_p99 "
              "--peak_load {peak_load} --load_metric_name {application}_qps "
              "--subprocess_shell "
              "--labels \"{labels}\"".format(
                  mutilate_cmd=mutilate_cmd,
                  application=application,
                  metric_name_prefix=application + "_",
                  kafka_brokers=wrapper_kafka_brokers,
                  kafka_topic=wrapper_kafka_topic,
                  log_level=wrapper_log_level,
                  labels=wrapper_labels, 
                  slo=str(4000), peak_load=str(QPS)
              )
        )
      ],
    )
  )
]
