<filter kubernetes.var.log.containers.memtier**>
  @type parser
  key_name log
  reserve_data true
  <parse>
    @type regexp
    #expression /^\[RUN #\d+ \d+%, \d+ secs\]\s+\d+ threads:\s+(?<memtier_total_ops>\d+) ops,\s+(?<memtier_cur_ops>\d+) \(avg:\s+(?<memtier_ops_sec>\d+)\) ops\/sec,\s+(?<memtier_cur_bytes_str>\d+\.\d*\w{2})\/sec \(avg:\s+(?<memtier_bytes_str>\d+\.\d*\w{2})\/sec\),\s+(?<memtier_cur_latency>\d+\.\d*) \(avg:\s+(?<memtier_avg_latency>\d+\.\d*)\) msec latency/
    expression /^\[RUN (.*?)\](.*?)threads:(.*?)(?<memtier_cur_ops>\d+) ops,(.*?)(?<memtier_ops_per_second>\d+)(.*?)ops\/sec, (?<memtier_mb_per_sec>\d+.\d*)\w{1,2}\/sec(.*?),\s+(?<memtier_cur_latency>\d+.\d*)(.*?)msec latency/
    types memtier_cur_ops:integer, memtier_cur_latency:float
  </parse>
</filter>

<filter kubernetes.var.log.containers.memtier**>
  @type prometheus
  <metric>
    name apm__memtier_scan_operations  # total operations not operations per second
    type gauge # it is a counter!
    desc OPS
    key memtier_cur_ops
    <labels>
      task_name ${task_name}
      podname $.kubernetes.pod_name
      hostname ${hostname}
      app $.kubernetes.labels.app
      workload $.kubernetes.labels.workload
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.memtier**>
  @type prometheus
  <metric>
    name apm__memtier_scan_latency
    type gauge
    desc latency
    key memtier_cur_latency
    <labels>
      task_name ${task_name}
      podname $.kubernetes.pod_name
      hostname ${hostname}
      app $.kubernetes.labels.app
      workload $.kubernetes.labels.workload
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>

<filter kubernetes.var.log.containers.memtier**>
  @type prometheus
  <metric>
    name apm__memtier_stdout_lines
    type counter
    desc stdout_lines
    <labels>
      task_name ${task_name}
      podname $.kubernetes.pod_name
      hostname ${hostname}
      app $.kubernetes.labels.app
      workload $.kubernetes.labels.workload
      namespace $.kubernetes.namespace_name
    </labels>
  </metric>
</filter>
